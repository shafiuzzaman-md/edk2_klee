; Query 0 -- Type: InitialValues, Instructions: 13472
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-logic QF_AUFBV )
; Array declarations
; Constraints
; Constraints and QueryExpr
(assert
        true
)
(check-sat)
(exit)
;   OK -- Elapsed: 4.006917e-03s
;   Solvable: true

; Query 1 -- Type: InitialValues, Instructions: 13472
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun *CommBufferSize () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           false
           (bvult 
                  ((_ zero_extend 32) 
                                      (concat 
                                              (select 
                                                      *CommBufferSize
                                                      (_ bv3 32)
                                              )
                                              (concat 
                                                      (select 
                                                              *CommBufferSize
                                                              (_ bv2 32)
                                                      )
                                                      (concat 
                                                              (select 
                                                                      *CommBufferSize
                                                                      (_ bv1 32)
                                                              )
                                                              (select 
                                                                      *CommBufferSize
                                                                      (_ bv0 32)
                                                              )
                                                      )
                                              )
                                      )
                  )
                  (_ bv16 64)
           )
        )
)
(check-sat)
(get-value ( (select *CommBufferSize (_ bv0 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv1 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv2 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 4.167182e-03s
;   Solvable: true
;     *CommBufferSize = [16,0,0,0]

; Query 2 -- Type: InitialValues, Instructions: 13483
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun mSmramReadyToLock () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           false
           (= 
              (_ bv0 8)
              (select 
                      mSmramReadyToLock
                      (_ bv0 32)
              )
           )
        )
)
(check-sat)
(get-value ( (select mSmramReadyToLock (_ bv0 32) ) ) )
(exit)
;   OK -- Elapsed: 3.762317e-03s
;   Solvable: true
;     mSmramReadyToLock = [255]

; Query 3 -- Type: InitialValues, Instructions: 13540
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun CommBuffer->Header.Command () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           false
           (= 
              (_ bv0 32)
              (concat 
                      (select 
                              CommBuffer->Header.Command
                              (_ bv3 32)
                      )
                      (concat 
                              (select 
                                      CommBuffer->Header.Command
                                      (_ bv2 32)
                              )
                              (concat 
                                      (select 
                                              CommBuffer->Header.Command
                                              (_ bv1 32)
                                      )
                                      (select 
                                              CommBuffer->Header.Command
                                              (_ bv0 32)
                                      )
                              )
                      )
              )
           )
        )
)
(check-sat)
(get-value ( (select CommBuffer->Header.Command (_ bv0 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv1 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv2 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 3.909174e-03s
;   Solvable: true
;     CommBuffer->Header.Command = [0,255,0,0]

; Query 4 -- Type: InitialValues, Instructions: 13540
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun CommBuffer->Header.Command () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           (_ bv1 32)
           (concat 
                   (select 
                           CommBuffer->Header.Command
                           (_ bv3 32)
                   )
                   (concat 
                           (select 
                                   CommBuffer->Header.Command
                                   (_ bv2 32)
                           )
                           (concat 
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv1 32)
                                   )
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv0 32)
                                   )
                           )
                   )
           )
        )
)
(check-sat)
(get-value ( (select CommBuffer->Header.Command (_ bv0 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv1 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv2 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 3.723201e-03s
;   Solvable: true
;     CommBuffer->Header.Command = [1,0,0,0]

; Query 5 -- Type: InitialValues, Instructions: 13540
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun CommBuffer->Header.Command () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           (_ bv2 32)
           (concat 
                   (select 
                           CommBuffer->Header.Command
                           (_ bv3 32)
                   )
                   (concat 
                           (select 
                                   CommBuffer->Header.Command
                                   (_ bv2 32)
                           )
                           (concat 
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv1 32)
                                   )
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv0 32)
                                   )
                           )
                   )
           )
        )
)
(check-sat)
(get-value ( (select CommBuffer->Header.Command (_ bv0 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv1 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv2 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 3.846562e-03s
;   Solvable: true
;     CommBuffer->Header.Command = [2,0,0,0]

; Query 6 -- Type: InitialValues, Instructions: 13540
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun CommBuffer->Header.Command () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           (_ bv3 32)
           (concat 
                   (select 
                           CommBuffer->Header.Command
                           (_ bv3 32)
                   )
                   (concat 
                           (select 
                                   CommBuffer->Header.Command
                                   (_ bv2 32)
                           )
                           (concat 
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv1 32)
                                   )
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv0 32)
                                   )
                           )
                   )
           )
        )
)
(check-sat)
(get-value ( (select CommBuffer->Header.Command (_ bv0 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv1 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv2 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 4.676213e-03s
;   Solvable: true
;     CommBuffer->Header.Command = [3,0,0,0]

; Query 7 -- Type: InitialValues, Instructions: 13540
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun CommBuffer->Header.Command () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           (_ bv4 32)
           (concat 
                   (select 
                           CommBuffer->Header.Command
                           (_ bv3 32)
                   )
                   (concat 
                           (select 
                                   CommBuffer->Header.Command
                                   (_ bv2 32)
                           )
                           (concat 
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv1 32)
                                   )
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv0 32)
                                   )
                           )
                   )
           )
        )
)
(check-sat)
(get-value ( (select CommBuffer->Header.Command (_ bv0 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv1 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv2 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 3.786838e-03s
;   Solvable: true
;     CommBuffer->Header.Command = [4,0,0,0]

; Query 8 -- Type: InitialValues, Instructions: 13540
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun CommBuffer->Header.Command () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           (_ bv5 32)
           (concat 
                   (select 
                           CommBuffer->Header.Command
                           (_ bv3 32)
                   )
                   (concat 
                           (select 
                                   CommBuffer->Header.Command
                                   (_ bv2 32)
                           )
                           (concat 
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv1 32)
                                   )
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv0 32)
                                   )
                           )
                   )
           )
        )
)
(check-sat)
(get-value ( (select CommBuffer->Header.Command (_ bv0 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv1 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv2 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 3.778975e-03s
;   Solvable: true
;     CommBuffer->Header.Command = [5,0,0,0]

; Query 9 -- Type: InitialValues, Instructions: 13540
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun CommBuffer->Header.Command () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           (_ bv6 32)
           (concat 
                   (select 
                           CommBuffer->Header.Command
                           (_ bv3 32)
                   )
                   (concat 
                           (select 
                                   CommBuffer->Header.Command
                                   (_ bv2 32)
                           )
                           (concat 
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv1 32)
                                   )
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv0 32)
                                   )
                           )
                   )
           )
        )
)
(check-sat)
(get-value ( (select CommBuffer->Header.Command (_ bv0 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv1 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv2 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 3.735869e-03s
;   Solvable: true
;     CommBuffer->Header.Command = [6,0,0,0]

; Query 10 -- Type: InitialValues, Instructions: 13540
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun CommBuffer->Header.Command () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           (_ bv7 32)
           (concat 
                   (select 
                           CommBuffer->Header.Command
                           (_ bv3 32)
                   )
                   (concat 
                           (select 
                                   CommBuffer->Header.Command
                                   (_ bv2 32)
                           )
                           (concat 
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv1 32)
                                   )
                                   (select 
                                           CommBuffer->Header.Command
                                           (_ bv0 32)
                                   )
                           )
                   )
           )
        )
)
(check-sat)
(get-value ( (select CommBuffer->Header.Command (_ bv0 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv1 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv2 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 3.887528e-03s
;   Solvable: true
;     CommBuffer->Header.Command = [7,0,0,0]

; Query 11 -- Type: InitialValues, Instructions: 13564
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun *CommBufferSize () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (let
            (
             (?B1
                 ((_ zero_extend 32) 
                                     (concat 
                                             (select 
                                                     *CommBufferSize
                                                     (_ bv3 32)
                                             )
                                             (concat 
                                                     (select 
                                                             *CommBufferSize
                                                             (_ bv2 32)
                                                     )
                                                     (concat 
                                                             (select 
                                                                     *CommBufferSize
                                                                     (_ bv1 32)
                                                             )
                                                             (select 
                                                                     *CommBufferSize
                                                                     (_ bv0 32)
                                                             )
                                                     )
                                             )
                                     )
                 )
             )
            )
            (and 
                 (= 
                    false
                    (bvult 
                           (_ bv0 64)
                           ?B1
                    )
                 )
                 (= 
                    false
                    (bvult 
                           ?B1
                           (_ bv16 64)
                    )
                 )
            )
        )
)
(check-sat)
(get-value ( (select *CommBufferSize (_ bv0 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv1 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv2 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 3.672620e-03s
;   Solvable: false

; Query 12 -- Type: InitialValues, Instructions: 13603
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun *CommBufferSize () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (let
            (
             (?B1
                 (concat 
                         (select 
                                 *CommBufferSize
                                 (_ bv3 32)
                         )
                         (concat 
                                 (select 
                                         *CommBufferSize
                                         (_ bv2 32)
                                 )
                                 (concat 
                                         (select 
                                                 *CommBufferSize
                                                 (_ bv1 32)
                                         )
                                         (select 
                                                 *CommBufferSize
                                                 (_ bv0 32)
                                         )
                                 )
                         )
                 )
             )
            )
            (and 
                 (= 
                    (_ bv24 32)
                    ?B1
                 )
                 (= 
                    false
                    (bvult 
                           ((_ zero_extend 32) 
                                               ?B1
                           )
                           (_ bv16 64)
                    )
                 )
            )
        )
)
(check-sat)
(get-value ( (select *CommBufferSize (_ bv0 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv1 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv2 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 4.066210e-03s
;   Solvable: true
;     *CommBufferSize = [24,0,0,0]

; Query 13 -- Type: InitialValues, Instructions: 13678
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun *CommBufferSize () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (let
            (
             (?B1
                 (concat 
                         (select 
                                 *CommBufferSize
                                 (_ bv3 32)
                         )
                         (concat 
                                 (select 
                                         *CommBufferSize
                                         (_ bv2 32)
                                 )
                                 (concat 
                                         (select 
                                                 *CommBufferSize
                                                 (_ bv1 32)
                                         )
                                         (select 
                                                 *CommBufferSize
                                                 (_ bv0 32)
                                         )
                                 )
                         )
                 )
             )
            )
            (and 
                 (= 
                    (_ bv32 32)
                    ?B1
                 )
                 (= 
                    false
                    (bvult 
                           ((_ zero_extend 32) 
                                               ?B1
                           )
                           (_ bv16 64)
                    )
                 )
            )
        )
)
(check-sat)
(get-value ( (select *CommBufferSize (_ bv0 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv1 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv2 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 4.000481e-03s
;   Solvable: true
;     *CommBufferSize = [32,0,0,0]

; Query 14 -- Type: InitialValues, Instructions: 13723
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun *CommBufferSize () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (let
            (
             (?B1
                 (concat 
                         (select 
                                 *CommBufferSize
                                 (_ bv3 32)
                         )
                         (concat 
                                 (select 
                                         *CommBufferSize
                                         (_ bv2 32)
                                 )
                                 (concat 
                                         (select 
                                                 *CommBufferSize
                                                 (_ bv1 32)
                                         )
                                         (select 
                                                 *CommBufferSize
                                                 (_ bv0 32)
                                         )
                                 )
                         )
                 )
             )
            )
            (and 
                 (= 
                    (_ bv40 32)
                    ?B1
                 )
                 (= 
                    false
                    (bvult 
                           ((_ zero_extend 32) 
                                               ?B1
                           )
                           (_ bv16 64)
                    )
                 )
            )
        )
)
(check-sat)
(get-value ( (select *CommBufferSize (_ bv0 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv1 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv2 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 4.188180e-03s
;   Solvable: true
;     *CommBufferSize = [40,0,0,0]

; Query 15 -- Type: InitialValues, Instructions: 13986
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun *CommBufferSize () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           (_ bv24 32)
           (concat 
                   (select 
                           *CommBufferSize
                           (_ bv3 32)
                   )
                   (concat 
                           (select 
                                   *CommBufferSize
                                   (_ bv2 32)
                           )
                           (concat 
                                   (select 
                                           *CommBufferSize
                                           (_ bv1 32)
                                   )
                                   (select 
                                           *CommBufferSize
                                           (_ bv0 32)
                                   )
                           )
                   )
           )
        )
)
(check-sat)
(get-value ( (select *CommBufferSize (_ bv0 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv1 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv2 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 4.206597e-03s
;   Solvable: true
;     *CommBufferSize = [24,0,0,0]

; Query 16 -- Type: InitialValues, Instructions: 14349
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun CommBuffer->Header.Command () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (let
            (
             (?B1
                 (concat 
                         (select 
                                 CommBuffer->Header.Command
                                 (_ bv3 32)
                         )
                         (concat 
                                 (select 
                                         CommBuffer->Header.Command
                                         (_ bv2 32)
                                 )
                                 (concat 
                                         (select 
                                                 CommBuffer->Header.Command
                                                 (_ bv1 32)
                                         )
                                         (select 
                                                 CommBuffer->Header.Command
                                                 (_ bv0 32)
                                         )
                                 )
                         )
                 )
             )
            )
            (or 
                (= 
                   (_ bv4 32)
                   ?B1
                )
                (= 
                   (_ bv3 32)
                   ?B1
                )
            )
        )
)
(check-sat)
(get-value ( (select CommBuffer->Header.Command (_ bv0 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv1 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv2 32) ) ) )
(get-value ( (select CommBuffer->Header.Command (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 6.027971e-03s
;   Solvable: true
;     CommBuffer->Header.Command = [4,0,0,0]

; Query 17 -- Type: InitialValues, Instructions: 14662
; This file conforms to SMTLIBv2 and was generated by KLEE
(set-option :produce-models true)
(set-logic QF_AUFBV )
; Array declarations
(declare-fun *CommBufferSize () (Array (_ BitVec 32) (_ BitVec 8) ) )
; Constraints
; Constraints and QueryExpr
(assert
        (= 
           (_ bv40 32)
           (concat 
                   (select 
                           *CommBufferSize
                           (_ bv3 32)
                   )
                   (concat 
                           (select 
                                   *CommBufferSize
                                   (_ bv2 32)
                           )
                           (concat 
                                   (select 
                                           *CommBufferSize
                                           (_ bv1 32)
                                   )
                                   (select 
                                           *CommBufferSize
                                           (_ bv0 32)
                                   )
                           )
                   )
           )
        )
)
(check-sat)
(get-value ( (select *CommBufferSize (_ bv0 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv1 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv2 32) ) ) )
(get-value ( (select *CommBufferSize (_ bv3 32) ) ) )
(exit)
;   OK -- Elapsed: 7.493943e-03s
;   Solvable: true
;     *CommBufferSize = [40,0,0,0]

